package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"core/app/helper"
	"core/app/middlewares"
	"log"
	graph "march-inventory/cmd/app/graph/generated"
	"march-inventory/cmd/app/graph/types"
	"march-inventory/cmd/app/services/inventoryService"
)

// Resolve the posts field in Author
func (r *inventoryTypeResolver) Posts(ctx context.Context, InventoryType *types.InventoryType) ([]*types.Post, error) {
	log.Printf("testResolve: %+v", InventoryType.ID)

	id := "1"
	name := "first"
	data := []*types.Post{
		{ID: &id, Name: &name},
	}

	return data, nil
}

// UpsertInventoryType is the resolver for the upsertInventoryType field.
func (r *mutationResolver) UpsertInventoryType(ctx context.Context, input types.UpsertInventoryTypeInput) (*types.MutationInventoryResponse, error) {
	logctx := helper.LogContext(ClassName, "UpsertInventoryType")

	userInfo := middlewares.UserInfo(ctx)
	logctx.Logger([]interface{}{userInfo}, "userInfo")

	return inventoryService.UpsertInventoryType(&input)
}

// DeleteInventoryType is the resolver for the deleteInventoryType field.
func (r *mutationResolver) DeleteInventoryType(ctx context.Context, id string) (*types.MutationInventoryResponse, error) {
	// panic(fmt.Errorf("not implemented: DeleteInventoryType - deleteInventoryType"))
	logctx := helper.LogContext(ClassName, "DeleteInventoryType")
	logctx.Logger([]interface{}{}, "")

	return inventoryService.DeleteInventoryType(id)
}

// GetInventoryType is the resolver for the getInventoryType field.
func (r *queryResolver) GetInventoryType(ctx context.Context, id *string) (*types.InventoryTypeResponse, error) {
	logctx := helper.LogContext(ClassName, "GetInventoryType")
	logctx.Logger([]interface{}{}, "")
	// panic(fmt.Errorf("not implemented: GetInventoryTypes - getInventoryTypes"))
	return inventoryService.GetInventoryType(id)
}

// GetInventoryTypes is the resolver for the getInventoryTypes field.
func (r *queryResolver) GetInventoryTypes(ctx context.Context, params *types.ParamsInventoryType) (*types.InventoryTypesResponse, error) {
	logctx := helper.LogContext(ClassName, "GetInventoryTypes")
	logctx.Logger([]interface{}{params}, "param")
	userInfo := middlewares.UserInfo(ctx)

	return inventoryService.GetInventoryTypes(params, userInfo)
}

// InventoryType returns graph.InventoryTypeResolver implementation.
func (r *Resolver) InventoryType() graph.InventoryTypeResolver { return &inventoryTypeResolver{r} }

type inventoryTypeResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
const ClassName string = "InventoryTypeResolver"
