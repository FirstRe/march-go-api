type InventoryBranch {
  id: String
  name: String
  description: String
  createdBy: String
  updatedBy: String
  updatedAt: String!
  createdAt: String!
}

type InventoryBranchsDataResponse {
  data: [InventoryBranch]
  status: Status
}

input UpsertInventoryBranchInput {
  id: String
  name: String!
  description: String
  createdBy: String
  updatedBy: String
}

type MutationInventoryBranchResponse {
  data: ResponseId
  status: Status
}

type DeleteInventoryBranchResponse {
  data: ResponseId
  status: Status
}

input ParamsInventoryBranch {
  search: String
  offset: Int
  limit: Int
}

extend type Query {
  getInventoryBranchs(
    params: ParamsInventoryBranch
  ): InventoryBranchsDataResponse @auth(scopes: ["AnyAdminScope"])
}

extend type Mutation {
  upsertInventoryBranch(
    input: UpsertInventoryBranchInput!
  ): MutationInventoryBranchResponse @auth(scopes: ["INBranchMaker"])
  deleteInventoryBranch(id: String!): MutationInventoryBranchResponse
    @auth(scopes: ["INBranchMaker"])
}
