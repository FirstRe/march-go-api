package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"

	"march-auth/cmd/app/common"
	"march-auth/cmd/app/common/helper"
	graph "march-auth/cmd/app/graph/generated"
	"march-auth/cmd/app/graph/types"
	userService "march-auth/cmd/app/services/user"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input types.UserInputParams) (*types.ResponseCreateUser, error) {
	return userService.CreateUser(&input)
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input types.LoginInputParams) (*types.ResponseLogin, error) {
	logctx := helper.LogContext(ClassName, "Login")
	logctx.Logger([]interface{}{input})
	return userService.Login(&input)
}

// GetUsers is the resolver for the getUsers field.
func (r *queryResolver) GetUsers(ctx context.Context) (*types.ResponseGetUser, error) {
	panic(fmt.Errorf("not implemented: GetUsers - getUsers"))
}

// Test is the resolver for the test field.
func (r *queryResolver) Test(ctx context.Context) (*types.Status, error) {
	logctx := helper.LogContext(ClassName, "Test")
	logctx.Logger([]interface{}{})

	response := common.StatusResponse(200, "")

	return response, nil
}

// GetPrice is the resolver for the getPrice field.
func (r *queryResolver) GetPrice(ctx context.Context) (*types.Price, error) {
	logctx := helper.LogContext(ClassName, "GetPrice")
	logctx.Logger([]interface{}{})

	response, err := userService.Price()

	return response, err
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
const ClassName string = "UserResolver"
